version: '3'

services:
  server1:
    build: ./server1  # Uses server1/Dockerfile
    container_name: server1
    ports:
      - "3001:3001"
    environment:
      - PORT=3001

  server2:
    build: ./server2  # Uses server2/Dockerfile
    container_name: server2
    ports:
      - "3002:3002"
    environment:
      - PORT=3002

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server1
      - server2
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090" # Prometheus UI on http://localhost:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Mounts prometheus.yml, so Prometheus loads our configuration.Maps prometheus.yml from your local system to /etc/prometheus/ inside the container.
    command:
      - "--config.file=/etc/prometheus/prometheus.yml" # Ensures Prometheus uses our custom configuration file.
  
  # Since Nginx doesnâ€™t expose metrics directly, we need an exporter.
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-exporter
    command: ["-nginx.scrape-uri=http://nginx:80/nginx_status"]
    ports:
      - "9113:9113" # Runs the exporter on port 9113, which Prometheus scrapes.

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
    - default
    volumes:
      - grafana-data:/var/lib/grafana
volumes:
  grafana-data:

